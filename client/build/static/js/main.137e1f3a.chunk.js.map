{"version":3,"sources":["components/Nav/Nav.js","components/Jumbotron/Jumbotron.js","components/Grid/Col.js","pages/Login.js","pages/Home.js","pages/Signup.js","utils/API.js","pages/Post.js","components/JobDetail/index.js","pages/Search.js","pages/View.js","pages/Hire.js","pages/Header.js","App.js","index.js"],"names":["Nav","props","react_default","a","createElement","className","href","text","id","Jumbotron","_ref","children","style","height","clear","paddingTop","textAlign","Col","size","split","map","join","Login","state","email","password","redirect","handleInputChange","event","_event$target","target","name","value","_this","setState","Object","defineProperty","handleClick","_callee","res","data","token","regenerator_default","wrap","_context","prev","next","preventDefault","fetch","method","headers","content-type","body","JSON","stringify","sent","status","json","localStorage","setItem","history","push","window","location","reload","t0","console","log","alert","stop","Col_Col","components_Jumbotron_Jumbotron","type","placeholder","onChange","this","htmlFor","onClick","Component","Home","components_Nav_Nav","username","Signup","firstName","lastName","userName","userCreated","axios","post","then","_React$createElement","_React$createElement2","react_router","to","action","instance","create","getItem","API","getUserInfo","get","getJobs","getHire","getAllHire","findAllHireWithDetail","saveHire","hireData","deleteHire","delete","saveJobs","jobData","getHandyman","getGroceries","getCleaners","getYardworkers","Post","yardwork","handyman","cleaners","groceries","jobDetails","city","price","checked","handleFormSubmit","catch","err","ref","$price","JobDetail","jobDate","job","jobTitles","_this2","usDate","moment","utc","format","key","_id","jobType","e","handleApply","diff","show","handleCancelJob","hireId","withAlert","Search","cleaning","jobs","find","applYForPosition","offerId","asyncToGenerator","mark","_x","apply","arguments","length","hired","components_JobDetail","View","jobImport","applyForPosition","Hire","allHire","title","lead","hire","i","_ref2","_callee2","_context2","Header","_useState","useState","_useState2","slicedToArray","setEmail","useEffect","_getUserInfo","removeItem","App","react_router_dom","pages_Header","exact","path","component","options","position","timeout","offset","transition","render","react_alert","assign","template","AlertTemplate","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.137e1f3a.chunk.js","sourcesContent":["import React from \"react\";\n\n\n\nconst Nav = props => (\n    <nav>\n        <div className=\"nav-wrapper\">\n            <a href=\"/home\" className=\"brand-logo\">\n                {/* <img id=\"image\" src={logo}/> */}\n            </a>\n            <div className=\"text\">\n                {props.text}\n            </div>\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down \">\n\n                <li><a className=\"indigo-text\" href=\"/view\">All Listings</a></li> \n                <li><a className=\"indigo-text\" href=\"/search\">Find Work</a></li>\n                <li><a className=\"indigo-text\" href=\"/jobs\">Post Work</a></li> \n                <li><a className=\"indigo-text\" href=\"/hire\">Hire</a></li> \n            </ul>\n        </div>\n    </nav>\n);\n\nexport default Nav;","import React from \"react\";\n\n\nconst Jumbotron = ({ children }) => (\n  <div\n    style={{ height: 200, clear: \"both\", paddingTop: 30, textAlign: \"center\" }}\n    className=\"jumbotron\"\n  >\n    {children}\n  </div>\n);\n\nexport default Jumbotron;","import React from \"react\";\n\nexport const Col = ({ size, children }) => (\n  <div className={size.split(\" \").map(size => \"col-\" + size).join(\" \")}>\n    {children}\n  </div>\n);","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router';\nimport Nav from '../components/Nav';\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Col, Row, Container } from \"../components/Grid\";\n\nclass Login extends Component {\n\n  state = {\n    email: \"\",\n    password: \"\",\n    redirect: false\n  }\n\n  handleInputChange = event => {\n\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    })\n  };\n\n  handleClick = async (event) => {\n    event.preventDefault();\n\n    try {\n      let res = await fetch(\"/login\", {\n        method: \"post\",\n        headers: {\"content-type\": \"application/json\"},\n        body: JSON.stringify({email: this.state.email, password: this.state.password})\n      })\n\n      if (res.status !== 200) {\n        throw 'error logging in';\n      }\n\n      let data = await res.json();\n      let token = data.token;\n      localStorage.setItem(\"token\", token);\n      this.props.history.push(\"/home\");\n      window.location.reload();\n\n    } catch (error) {\n      console.log(error);\n      alert(\"Cannot login. Please check email and password.\");\n    }\n\n\n  }\n\n  render() {\n    // const { redirect } = this.state;\n    // if (redirect) {\n    //   return <Redirect to=\"/home\" />\n    // }\n\n    return (\n      <div>\n\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>HelpGods!</h1>\n          </Jumbotron>\n\n          <center>\n            <h5 className=\"black-text\">Welcome back, please login into your account</h5>\n\n            <div className=\"container\">\n              <div className=\"z-depth-1 grey lighten-4 row\" >\n                <form className=\"col s12\">\n\n                  <div className='row'>\n                    <div className='input-field col s12'>\n                      <input className='validate' type='email'\n                        name='email' id='email'\n                        placeholder=\"Enter your email\"\n                        onChange={this.handleInputChange}\n                      />\n                      <label htmlFor='email'>Email</label>\n                    </div>\n                  </div>\n\n                  <div className='row'>\n                    <div className='input-field col s12'>\n                      <input className='validate' type='password' name='password'\n                        id='password' placeholder=\"Enter your password\"\n                        onChange={this.handleInputChange}\n                      />\n                      <label htmlFor='password'>Password</label>\n                    </div>\n                  </div>\n\n                  <div className='row'>\n                    <button onClick={this.handleClick}\n                      type='submit'\n                      name='btn_login'\n                      className='col s12 btn btn-large waves-effect indigo'>Login</button>\n                  </div>\n\n                </form>\n              </div>\n            </div>\n            <a href=\"/signup\">Create account</a>\n          </center>\n\n          <div className=\"section\"></div>\n          <div className=\"section\"></div>\n        </Col>\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Col, Row} from \"../components/Grid\";\nimport Nav from \"../components/Nav\";\nimport \"./Pages.css\";\n\nclass Home extends Component {\n  render(){\n    return(\n      <div>\n        <Nav text={this.props.username} text={this.props.email} />\n        <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>HelpGods!</h1>\n            </Jumbotron>\n        </Col>\n        <br/>\n\n          <div className='row'>\n            <a href=\"/view\"><button type=\"button\" className=\"col s12 btn btn-large waves-effect black \">Job Listings\n              <label className=\"indigo-text\"> (All job postings)</label> \n            </button></a>              \n          </div>\n            <br/>\n\n          <div className='row'> \n          <a href=\"/search\"><button type=\"button\" className=\"col s12 btn btn-large waves-effect black \">Search Help\n              <label className=\"indigo-text\">(Search job postings)</label> \n            </button></a>\n          </div> \n            <br/>\n\n          <div className='row'> \n            <a href=\"/jobs\"> <button type=\"sumbit\" className=\"col s12 btn btn-large waves-effect black\">Offer Help\n              <label className=\"indigo-text\">(Post a job)</label>\n            </button></a>\n          </div>\n\n      </div>\n  )\n  }\n}\n\n\nexport default Home;","import React, { Component } from \"react\";\nimport {Redirect} from 'react-router';\nimport axios from \"axios\"\nimport Jumbotron from \"../components/Jumbotron\";\nimport {Col, Row} from \"../components/Grid\";\nimport Nav from \"../components/Nav\";\nimport Home from \"../pages/Home\";\n\n\n// import User from \"../models/register\"\n// import API from \"../util/API\"\n\n\n\nclass Signup extends Component {\n\n  state = {\n    firstName: \"\",\n    lastName:\"\",\n    userName:\"\",\n    password:\"\",\n    email:\"\",\n    userCreated:\"\",\n    redirect: false\n  }\n\n  handleInputChange = event => {\n\n    const { name, value } = event.target;\n      this.setState({\n        [name]: value \n      })\n  };\n\n  handleClick = (event) => {\n    event.preventDefault()\n\n    axios.post('/users', { \n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        userName: this.state.userName,\n        email: this.state.email,\n        password: this.state.password,\n    })\n    .then((res) => {\n      console.log(res)\n      if(res.status === 200){\n        // console.log(\"GREAT\")\n        this.setState({ redirect: true })\n      }\n    })\n  }\n  \n  render() {\n    const { redirect } = this.state;\n    if (redirect) {\n      return <Redirect to='/' username= { this.state.userName }/>\n    }\n\n    return (\n     <div>\n          <Col size=\"md-12\">\n            <Jumbotron>\n                <h1>HelpGods!</h1>\n            </Jumbotron>\n\n            <center>   \n              <h5 className=\"black-text\">Hello, enter the correct info below</h5>\n\n              <div className=\"container\">\n                <div className=\"z-depth-1 grey lighten-4 row\" >\n                  <form className=\"col s12\" method=\"post\" action=\"http://localhost:3001/submit\">\n\n                    <div className='row'> \n                    \n                      <div className=\"input-field col s6\">\n                        <input value={this.state.firstName} onChange={this.handleInputChange} name=\"firstName\" id=\"first_name\" type=\"text\" className=\"validate\" placeholder=\"First\"/>\n                          <label htmlFor=\"first_name\">First Name</label>\n                      </div>\n                      <div className=\"input-field col s6\">\n                        <input value={this.state.lastName} onChange={this.handleInputChange} name=\"lastName\" id=\"last_name\" type=\"text\" className=\"validate\" placeholder=\"Last\"/>\n                          <label htmlFor=\"last_name\">Last Name</label>\n                      </div> \n                    </div>                     \n                    <div className='row'>\n                      <div className='input-field col s12'>\n                          <input value={this.state.userName} onChange={this.handleInputChange} name=\"userName\" className='validate' type='text' id='user_name' placeholder=\"Enter your Username\"/>\n                            <label htmlFor=\"user_name\">Username</label>\n                      </div>\n                    </div>                  \n                    <div className='row'>\n                      <div className='input-field col s12'>\n                        <input value={this.state.email} onChange={this.handleInputChange} name=\"email\" className='validate' type='email' name='email' id='email' placeholder=\"Enter your email\" />\n                          <label htmlFor=\"email\">Email</label>\n                      </div>\n                    </div>\n                    <div className='row'>\n                      <div className='input-field col s12'>\n                        <input value={this.state.password} onChange={this.handleInputChange} name=\"password\" className='validate' type='password' name='password' id='password' placeholder=\"Create your password\" />\n                          <label htmlFor=\"password\">Password</label>\n                      </div>\n                    </div>\n                    <div className='row'>\n                      <button onClick={this.handleClick} type='submit' name='btn_login' className='col s12 btn btn-large waves-effect indigo'>Register</button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n                <a href=\"/\">Already signed up</a>\n            </center>\n                  <div className=\"section\"></div>\n          </Col>\n     </div>\n    );\n  }\n}\n\nexport default Signup;","import axios from \"axios\";\n\nconst instance = axios.create({\n  headers: { token: localStorage.getItem(\"token\") }\n});\n\nexport default {\n  getUserInfo: function () {\n    return instance.get(\"/userInfo\");\n  },\n  // Gets all jobs\n  getJobs: function () {\n    return instance.get(\"/view\");\n  },\n  // Gets the jobs with the given id\n  getHire: function (id) {\n    return instance.get(\"/hire/\" + id);\n  },\n  getAllHire: function () {\n    return instance.get(\"/hire/\");\n  },\n  findAllHireWithDetail: function () {\n    return instance.get(\"/hire/findAllHireWithDetail\");\n  },\n  saveHire: function (hireData) {\n    return instance.post(\"/hire\", hireData);\n  },\n  // Deletes the jobs with the given id\n  deleteHire: function (id) {\n    return instance.delete(\"/hire/\" + id);\n  },\n  // Saves a job to the database\n  saveJobs: function (jobData) {\n    return instance.post(\"/jobs\", jobData);\n  },\n  // get carpenters\n  getHandyman: function () {\n    return instance.get(\"/findHandyman\")\n  },\n  getGroceries: function () {\n    return instance.get(\"/findGroceries\")\n  },\n  getCleaners: function () {\n    return instance.get(\"/findCleaners\")\n  },\n  getYardworkers: function () {\n    return instance.get(\"/findYardworkers\")\n  }\n};","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Col, Row} from \"../components/Grid\";\nimport Nav from \"../components/Nav\";\nimport \"./Pages.css\";\nimport API from '../utils/API';\n\nclass Post extends Component {\n  state = {\n    yardwork: false,\n    handyman: false,\n    cleaners: false,\n    groceries: false,\n    jobDetails: \"\",\n    city: \"\",\n    state: \"\",\n    email: \"\",\n    price: \"\"\n  };\n\n  handleInputChange = event => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    var jobData = this.state\n    console.log(jobData)\n    API.saveJobs(jobData)\n        .then(res => {\n          // res.redirect\n          console.log(res)\n          console.log(this.props.history.push(\"/view\"))\n          this.props.history.push(\"/view\")\n        })\n        .catch(err => console.log(err))\n    }\n  \n  render() {\n    return (\n     <div>\n       <Nav />\n          <Col size=\"md-12\">\n            <Jumbotron>\n                <h1>HelpGods!</h1>\n            </Jumbotron>\n\n            <center>   \n                <h5 className=\"black-text\">Post a job</h5>\n\n              <div className=\"container\">\n                <div className=\"z-depth-1 grey lighten-4 row\" >\n                  <form className=\"col s12\" method=\"post\">\n                      What type of help do you want to offer?\n                        <div className='row'>\n                          <div className='input-field col s12'>\n                            <span className=\"input-group-text\"> Select your Job(s)</span>\n                          </div>\n                            <label>Check all that apply</label>\n                        </div>\n\n                        <div className='row'>\n                          <label> \n                            <input type=\"checkbox\" ref=\"handyman\" name=\"handyman\" checked={this.state.handyman} onChange={this.handleInputChange}/>\n                              <span>Handyman</span>                  \n                          </label>   \n                        </div>\n                        <div className='row'>\n                          <label> \n                            <input type=\"checkbox\" ref=\"yardwork\" name=\"yardwork\" checked={this.state.yardwork} onChange={this.handleInputChange}/>\n                              <span>Yardwork</span>                  \n                          </label>   \n                        </div>\n                        <div className='row'>\n                          <label> \n                            <input type=\"checkbox\" ref=\"groceries\" name=\"groceries\" checked={this.state.groceries} onChange={this.handleInputChange}/>\n                              <span>Grocery Shopper</span>                  \n                          </label>   \n                        </div>\n                        <div className='row'>\n                          <label>\n                            <input type=\"checkbox\" ref=\"cleaners\" name=\"cleaners\" checked={this.state.cleaners} onChange={this.handleInputChange}/>\n                              <span>Cleaning</span>\n                          </label>                                           \n                        </div>\n                        <div className='row'>\n                          <div className='input-field col s12'>\n                            <textarea className='validate' type='text'\n                            value={this.state.jobDetails} onChange={this.handleInputChange} name='jobDetails' id='details' placeholder=\"prices, notes, etc.\"/>\n                              <label htmlFor=\"details\">Job Details</label>\n                          </div>\n                        </div>\n                        <div className='row'>\n                      <div className=\"input-field col s6\">\n                        <input id=\"city\" type=\"text\" className=\"validate\"\n                        value={this.state.city} onChange={this.handleInputChange} name='city' placeholder=\"City\"/>\n                          <label htmlFor=\"first_name\">City</label>\n                      </div>\n                      <div className=\"input-field col s6\">\n                        <input id=\"state\" type=\"text\" className=\"validate\"\n                        value={this.state.state} onChange={this.handleInputChange} name='state' placeholder=\"State\"/>\n                          <label htmlFor=\"last_name\">State</label>\n                      </div> \n                    </div> \n                        <div className='row'>\n                          <div className=\"input-field col s12\">\n                            <input id=\"email\" type='text' className='validate'\n                            value={this.state.email} onChange={this.handleInputChange} name='email' placeholder=\"email@me.com\" />\n                              <label htmlFor=\"email\">Email</label>\n                          </div>\n                        </div>\n                        <div className='row'>\n                          <div className=\"input-field col s12\">\n                            <input id=\"price\" type='number' className='validate'\n                            value={this.state.$price} onChange={this.handleInputChange} name='price' placeholder=\"Price\" />\n                              <label htmlFor=\"price\">Price</label>\n                          </div>\n                        </div>\n                        <div className='row'>\n                          <button type='submit' name='btn_login' className='col s12 btn btn-large waves-effect indigo' onClick={this.handleFormSubmit}>Post</button>\n                        </div>\n                  </form>\n                </div>\n              </div>\n            </center>\n                  <div className=\"section\"></div>\n          </Col>\n     </div>\n    );\n  }\n}\n\nexport default Post;","import React, { Component } from \"react\";\nimport moment from 'moment';\nimport { withAlert } from 'react-alert';\n\nclass JobDetail extends Component {\n\n    state = {\n        jobDate: \"\"\n    }\n\n    jobType(job) {\n        var jobTitles = \"\"\n        if (job.handyman) {\n            jobTitles += \"Handyman  \"\n        }\n        if (job.cleaners) {\n            jobTitles += \"Cleaners  \"\n        }\n        if (job.groceries) {\n            jobTitles += \"Groceries \"\n        }\n        if (job.yardwork) {\n            jobTitles += \"Yard Work  \"\n        }\n        return jobTitles;\n    }\n\n    render() {\n        let job = this.props.job;\n        let usDate = moment.utc(job.jobDate).format(\"MM-DD-YY\");\n\n        return (\n\n            <div className=\"z-depth-1 grey lighten-4 row\" key={job._id} >\n                <strong>Skills: </strong> {this.jobType(job)}\n                <br></br>\n                <strong>Job Details:</strong> {job.jobDetails}\n                <br></br>\n                <strong>Location:</strong> {job.city}, {job.state}\n                <br></br>\n                <strong>Email:</strong> {job.email}\n                <br />\n                <strong>Price$:</strong> {job.price}\n                <br />\n                <strong>Date:</strong>\n                {job.jobDate && <div>{usDate}</div>}\n                {!job.jobDate && <input type=\"date\" name=\"date\"\n                    onChange={(e) => {\n                        let jobDate = e.target.value;\n                        this.setState({jobDate});\n                    }}\n                \n                />}\n                {this.props.handleApply && <div>\n                    <button onClick={() => {\n                        const dateTodayOrInFuture = moment(this.state.jobDate).diff(moment.utc(moment()), 'days') >= 0;\n            \n                        if(dateTodayOrInFuture){\n                        this.props.handleApply(job._id, this.state.jobDate)\n                        }\n                        else {\n                            this.props.alert.show(\"Please Enter The Valid Date\", {type: \"error\"})\n                        }\n                        //this.props.alert.show(\"Error! Job cannot be applied on this date.\", {type: \"error\"})\n                        //To show an error occurred\n                    }} >Apply</button>\n                </div>}\n                {this.props.handleCancelJob && <div>\n                    <button onClick={() => {\n                        this.props.handleCancelJob(job.hireId)\n                    }} >Cancel Job</button>\n                </div>}\n            </div>\n\n        );\n    }\n}\n\nexport default withAlert()(JobDetail);","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Col, Row } from \"../components/Grid\";\nimport Nav from \"../components/Nav\";\nimport API from '../utils/API';\nimport JobDetail from '../components/JobDetail';\nimport { withAlert } from 'react-alert';\n\n\nclass Search extends Component {\n  state = {\n    yardwork: false,\n    handyman: false,\n    cleaning: false,\n    groceries: false,\n    jobs: []\n  };\n\n  handleInputChange = event => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  find = event => {\n    this.setState({\n      jobs: []\n    })\n    event.preventDefault();\n\n    if (this.state.yardwork === true) {\n\n      API.getYardworkers()\n        .then(res => {\n          console.log(res)\n          this.setState({\n            jobs: res.data\n          })\n        })\n    }\n    if (this.state.handyman === true) {\n      // console.log(API.getHandyman());\n      API.getHandyman()\n        .then(res => {\n          console.log(res)\n          this.setState({\n            jobs: res.data\n          })\n        })\n    }\n    if (this.state.cleaners === true) {\n      API.getCleaners()\n        .then(res => {\n          this.setState({\n            jobs: res.data\n          })\n        })\n    }\n    if (this.state.groceries === true) {\n      API.getGroceries()\n        .then(res => {\n          this.setState({\n            jobs: res.data\n          })\n        })\n    }\n  }\n\n  jobType(job) {\n    var jobTitles = \"\"\n    if (job.handyman) {\n      jobTitles += \"Handyman  \"\n    }\n    if (job.cleaners) {\n      jobTitles += \"Cleaners  \"\n    }\n    if (job.groceries) {\n      jobTitles += \"Groceries \"\n    }\n    if (job.yardwork) {\n      jobTitles += \"Yard Work  \"\n    }\n    return jobTitles;\n  }\n\n  applYForPosition = (id, jobDate) => {\n    console.log('THis job is being applied for ' + id);\n    //We need to hit a route on our express server that modifieds the appropriate ID in our data base and changes hired to true\n    var hireData = {\n      offerId: id,\n      jobDate\n    };\n    API.saveHire(hireData)\n      .then(res => {\n        this.props.history.push(\"/hire\");\n        this.props.alert.show('Job Hired!', { type: 'success' })\n        console.log('THis job is being applied for ' + id);\n      })\n      .catch(async (err) => {\n        console.log(err);\n        this.props.alert.show(\"Error! Job cannot be applied on this date.\", {type: \"error\"})\n      })\n\n\n\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>UBERHELP!</h1>\n          </Jumbotron>\n\n          <center>\n            <h5 className=\"black-text\">Search for a job</h5>\n            <div className=\"container\">\n              <div className=\"z-depth-1 grey lighten-4 row\" >\n                <form className=\"col s12\">\n                  <a href=\"/view\" className=\"indigo-text\"> Or view all jobs available</a>\n                  <div className='row'>\n                    <div className='input-field col s12'>\n                      <span className=\"input-group-text\"> Select the type of work you're seeking below</span>\n                    </div>\n                  </div>\n                  <div className='row'>\n                    <label>\n                      <input type=\"checkbox\" ref=\"handyman\" name=\"handyman\" checked={this.state.handyman} onChange={this.handleInputChange} />\n                      <span>Handyman</span>\n                    </label>\n                  </div>\n                  <div className='row'>\n                    <label>\n                      <input type=\"checkbox\" ref=\"yardwork\" name=\"yardwork\" checked={this.state.yardwork} onChange={this.handleInputChange} />\n                      <span>Yardwork</span>\n                    </label>\n                  </div>\n                  <div className='row'>\n                    <label>\n                      <input type=\"checkbox\" ref=\"groceries\" name=\"groceries\" checked={this.state.groceries} onChange={this.handleInputChange} />\n                      <span>Grocery Shopper</span>\n                    </label>\n                  </div>\n                  <div className='row'>\n                    <label>\n                      <input type=\"checkbox\" ref=\"cleaning\" name=\"cleaning\" checked={this.state.cleaners} onChange={this.handleInputChange} />\n                      <span>Cleaning</span>\n                    </label>\n                  </div>\n\n                  <div className='row'>\n                    <button type=\"submit\" onClick={this.find} name='btn_login' className='col s12 btn btn-large waves-effect indigo'>Find!</button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </center>\n          <center>\n            <div className=\"section\">\n\n              {this.state.jobs.length ? (\n                <div className=\"container\">\n                  {this.state.jobs.length ? (\n                    <div className=\"z-depth-1 grey lighten-2 row\">\n                      {this.state.jobs.map(job => {\n                        const { hired, _id, city, state, email, price, jobDetails } = job;\n                        if (!hired) {\n                          return (\n\n                            <JobDetail\n                              key={_id}\n                              job={job}\n                              handleApply={(id, jobDate) => {\n                                this.applYForPosition(id, jobDate);\n\n                              }}\n                            />\n                          )\n                        }\n\n                      })}\n                    </div>\n                  ) : (\n                      <h3></h3>\n                    )}\n\n                </div>\n              ) : (\n                  <h3> No jobs yet</h3>\n                )}\n            </div>\n          </center>\n        </Col>\n      </div>\n    );\n  }\n}\nexport default withAlert()(Search);","import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Col, Row } from \"../components/Grid\";\nimport Nav from \"../components/Nav\";\nimport API from \"../utils/API\";\nimport Post from \"./Post\";\nimport JobDetail from '../components/JobDetail';\nimport { withAlert } from 'react-alert';\n\nclass View extends Component {\n  state = {\n    jobs: []\n  };\n\n  componentDidMount() {\n    this.jobImport();\n  }\n\n  jobType(job) {\n    var jobTitles = \"\"\n    if (job.handyman) {\n      jobTitles += \"Handyman  \"\n    }\n    if (job.cleaners) {\n      jobTitles += \"Cleaners  \"\n    }\n    if (job.groceries) {\n      jobTitles += \"Groceries \"\n    }\n    if (job.yardwork) {\n      jobTitles += \"Yard Work  \"\n    }\n    return jobTitles;\n  }\n\n\n  jobImport = event => {\n    API.getJobs()\n      .then(res => {\n        console.log(res)\n        this.setState({ jobs: res.data })\n      })\n      .catch(err => console.log(err))\n  }\n\n  applyForPosition = (id, jobDate) => {\n    //We need to hit a route on our express server that modifieds the appropriate ID in our data base and changes hired to true\n    var hireData = {\n      offerId: id,\n      jobDate\n    };\n    API.saveHire(hireData)\n      .then(res => {\n        this.props.history.push(\"/hire\");\n        this.props.alert.show('Job Hired!', { type: 'success' })\n        console.log('THis job is being applied for ' + id);\n      })\n      .catch(async (err) => {\n        console.log(err);\n        this.props.alert.show(\"Error! Job cannot be applied on this date.\", {type: \"error\"})\n      })\n\n  }\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>HelpGods!</h1>\n          </Jumbotron>\n\n          <center>\n            <h5 className=\"black-text\"> <strong>All Current Job Listings</strong></h5>\n            <div className=\"container\">\n              {this.state.jobs.length ? (\n                <div className=\"z-depth-1 grey lighten-2 row\">\n                  {this.state.jobs.map(job => {\n                    const { hired, _id, city, state, email, price, jobDetails } = job;\n                    if (!hired) {\n                      return (\n\n                        <JobDetail\n                          key={job._id}\n                          job={job}\n                          handleApply={(id, jobDate) => {\n                            this.applyForPosition(id, jobDate);\n                          }}\n                        />\n                      )\n                    }\n\n                  })}\n                </div>\n              ) : (\n                  <h3></h3>\n                )}\n\n            </div>\n          </center>\n          <div className=\"section\"></div>\n        </Col>\n      </div>\n    );\n  }\n}\n\nexport default withAlert()(View);","import React, { Component } from 'react';\nimport API from '../utils/API';\nimport Jumbotron from '../components/Jumbotron';\nimport Nav from \"../components/Nav\";\nimport JobDetail from '../components/JobDetail';\nimport { withAlert } from 'react-alert';\n\nclass Hire extends Component {\n  state = { allHire: [] }\n\n  // Method to Query the API/Database to GET all the books in the database.\n  handleFormSubmit = event => {\n    event.preventDefault();\n    var hireData = this.state\n    console.log(hireData)\n    API.getHire()\n      .then(res => this.setState({ jobs: res.data }))\n    // res.redirect\n\n    console.log(this.props.history.push(\"/view\"))\n    this.props.history.push(\"/view\")\n\n      .catch(err => console.log(err))\n  }\n\n  // Method to DELETE a particular job from the database.\n  deleteHire = id => {\n    return API.deleteHire(id)\n      .then(res => { })\n      .catch(err => console.log(err))\n\n  };\n\n\n  componentDidMount() {\n    this.getAllHire();\n  }\n\n  getAllHire = async () => {\n    API.findAllHireWithDetail().then((res) => {\n      let allHire = res.data;\n      //console.log(allHire);\n      this.setState({ allHire });\n    })\n  }\n\n  render() {\n    return (\n     \n     <div className=\"container\">\n        <Jumbotron\n          title=\"Job\"\n          lead=\"All of your job in one place\"\n          \n        />\n        <Nav />\n        <div>\n          {this.state.allHire.map((hire, i) => {\n            //console.log(hire);\n\n            return <JobDetail\n              key={hire._id + i}\n              job={hire}\n              handleCancelJob={async (hireId) => {\n                // await fetch(\"/hire/\" + hireId, {method: \"DELETE\"});\n                await this.deleteHire(hireId);\n                this.getAllHire();\n                this.props.alert.show('Job Canceled!', { type: 'success' })\n\n              }}\n\n            />\n          })}\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default withAlert()(Hire);","import React, { useState, useEffect } from \"react\";\nimport API from '../utils/API';\n\nconst Header = (props) => {\n\n    let [email, setEmail] = useState('');\n\n    useEffect(() => {\n\n        getUserInfo();\n\n        async function getUserInfo() {\n            let data = await API.getUserInfo();\n            let email = data.data.email;\n            setEmail(email);\n            console.log(email);\n        }\n\n    }, [])\n\n    if (email == '') {\n        return <div>please log in</div>\n    }\n\n    return (\n        <div>welcome back, {email}. <button onClick={(e) => {\n            e.preventDefault();\n            localStorage.removeItem(\"token\");\n            window.location.href = \"/\"\n            // window.location.reload();\n        }}\n\n        >Logout</button></div>\n    )\n\n}\n\nexport default Header;","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./pages/Login\"\r\nimport Signup from \"./pages/Signup\"\r\nimport Home from \"./pages/Home\"\r\nimport Post from \"./pages/Post\"\r\nimport Search from \"./pages/Search\"\r\nimport View from \"./pages/View\"\r\nimport Hire from \"./pages/Hire\"\r\nimport Header from './pages/Header';\r\n\r\n\r\nconst App = () =>\r\n  <Router>\r\n    <div>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route exact path=\"/signup\" component={Signup} />\r\n        <Route exact path=\"/home\" component={Home} />\r\n        <Route exact path=\"/jobs\" component={Post} />\r\n        <Route exact path=\"/search\" component={Search} />\r\n        <Route exact path=\"/view\" component={View} />\r\n        <Route exact path=\"/hire\" component={Hire} />\r\n      \r\n        {/* <Route component={NoMatch} /> */}\r\n      </Switch>\r\n    </div>\r\n  </Router>;\r\n\r\nexport default App;","// import React, {Component} from 'react';\n\nimport React from 'react';\n\nimport { render } from \"react-dom\";\nimport { Provider as AlertProvider} from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\nimport App from './App'\n \n// optional cofiguration\nconst options = {\n  // you can also just use 'bottom center'\n  position: 'top center',\n  timeout: 5000,\n  offset: '30px',\n  transition: 'scale'\n  // you can also just use 'scale'\n  \n}\n \nconst Root = () => (\n  <AlertProvider template={AlertTemplate} {...options}>\n    <App />\n  </AlertProvider>\n)\n \n\n// class Root extends Component {\n//   render () {\n//     return (\n//       <AlertProvider template={AlertTemplate} {...options}>\n//         <App/>\n//       </AlertProvider>\n//     )\n//   }\n// }\n\n\n\n\n\nrender(<Root />, document.getElementById(\"root\"));"],"sourceRoot":""}